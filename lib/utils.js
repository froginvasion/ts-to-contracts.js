// Generated by CoffeeScript 1.6.3
(function() {
  var define;

  if (typeof define !== 'function') {
    define = require('amdefine')(module);
  }

  define(function(require) {
    var Arr, Arr_like, C, allInstanceOf, allTypeOf, makeArrContract, makeArrTypeContract;
    C = require('contracts-js');
    makeArrContract = function(type) {
      return function(a) {
        return typeof a.length !== 'undefined' && typeof a.length === 'number' && (allInstanceOf(a, type) || a.length === 0);
      };
    };
    makeArrTypeContract = function(t) {
      return function(a) {
        return typeof a.length !== 'undefined' && typeof a.length === 'number' && (allTypeOf(a, t) || a.length === 0);
      };
    };
    allTypeOf = function(a, type) {
      var i, _i, _ref;
      for (i = _i = 0, _ref = a.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        if (!(typeof a[i] === type)) {
          return false;
        }
      }
      return true;
    };
    allInstanceOf = function(a, type) {
      var i, _i, _ref;
      for (i = _i = 0, _ref = a.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        if (!(a[i] instanceof type)) {
          return false;
        }
      }
      return true;
    };
    Arr = C.obj({
      length: (function(x) {
        return typeof x === "number";
      }).toContract()
    }, {});
    Arr_like = (function(x) {
      return typeof x.length !== 'undefined';
    }).toContract();
    return {
      Arr: Arr,
      Arr_like: Arr_like,
      makeArrContract: makeArrContract,
      makeArrTypeContract: makeArrTypeContract
    };
  });

}).call(this);

/*
//@ sourceMappingURL=utils.map
*/
